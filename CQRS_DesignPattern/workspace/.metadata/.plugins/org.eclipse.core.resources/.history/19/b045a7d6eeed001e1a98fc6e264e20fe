package com.dailycodebuffer.ProductService.query.api.projection;

import com.dailycodebuffer.ProductService.command.api.data.Product;
import com.dailycodebuffer.ProductService.command.api.data.ProductRepository;
import com.dailycodebuffer.ProductService.command.api.model.ProductRestModel;
import com.dailycodebuffer.ProductService.query.api.queries.GetProductsQuery;
import org.axonframework.queryhandling.QueryHandler;
import org.springframework.stereotype.Component;

import java.util.List;
import java.util.stream.Collectors;

@Component
public class ProductProjection {

    private ProductRepository productRepository;

    public ProductProjection(ProductRepository productRepository) {
        this.productRepository = productRepository;
    }

    @QueryHandler
    public List<ProductRestModel> handle(GetProductsQuery getProductsQuery) {
        List<Product> products =
                productRepository.findAll();
        Product product  = new Product()  ;
        List<ProductRestModel>   productRestModelList  = getproductRestModelList(products);
       

        
        return productRestModelList;
    }

	private List<ProductRestModel> getproductRestModelList(List<Product> products) {
		// TODO Auto-generated method stub
		products.stream().map(product -> ProductRestModel.builder()
				                               .name(product.getName())
				                               .price(product.getPrice())
				                               .quantity(product.getQuantity())
				              ).collect(Collectors.toList());
		return null;
	}
}
